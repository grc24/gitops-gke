---

- name: Authenticate with GKE
  command: gcloud container clusters get-credentials {{ cluster_name }} --region {{ region }} --project {{ project_id }}
  register: gke_auth

- name: Get Pods
  kubernetes.core.k8s_info:
    kind: Pod
  register: pods

- debug:
        var: pods.resources

# - name: Get Kubernetes Pods
#   kubernetes.core.k8s_info:
#     kind: Pod
#     namespace: awx
#   register: pod_info
#   vars:
#     k8s_auth:
#       host: "https://kubernetes.default.svc"  # Default in-cluster API endpoint
#       validate_certs: no  # Disable if using self-signed certs
#       in_cluster: yes     # Use in-cluster authentication

# tasks file for argo-cd-ansible-gke
- name: Create Argo CD namespace
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ argocd_namespace }}"
    kubeconfig: "{{ kubeconfig_path }}"


- name: Add Argo Helm repo
  community.kubernetes.helm_repository:
    name: argo
    repo_url: "{{ argocd_helm_repo }}"


- name: Install Argo CD with Helm
  community.kubernetes.helm:
    name: "{{ argocd_helm_release_name }}"
    chart_ref: "{{ argocd_helm_chart }}"
    release_namespace: "{{ argocd_namespace }}"
    create_namespace: false
    kubeconfig: "{{ kubeconfig_path }}"
    values:
      server:
        service:
          type: LoadBalancer


- name: Wait for ArgoCD server pod to be ready
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: "{{ argocd_namespace }}"
    label_selectors:
      - "app.kubernetes.io/name=argocd-server"
    kubeconfig: "{{ kubeconfig_path }}"
  register: argocd_pods
  until: argocd_pods.resources | length > 0 and argocd_pods.resources[0].status.containerStatuses[0].ready
  retries: 20
  delay: 15
